
"Configure" below means an optional write (if the register already has the
appropriate value, no write is required). "Write" below means a mandatory write
(register must be re-written to even if the existing value is correct).

# Starting and Stopping Acquisition

To begin acqusition (no live stream):

1. Write STOP to top level state register (redundant?)
2. Write STOP to UDP module state register (redundant?)
3. Read DAQ chip ready register and confirm that the desired chips are "alive"
4. Write READY_WRITE to SATA module state register
5. Configure top word of experiment cookie
6. Configure bottom word of experiment cookie
7. Write desired starting board sample index to DAQ board sample index register
8. Write BEGIN_ACQ to top level state register

To stop acquisition:

1. Write STOP state to top level state register
2. Read last index number from SATA write register

To begin partial live streaming:

0. Configure UDP IPv4 source register
1. Configure UDP IPv4 destination register
2. Configure UDP MAC destination register, HIGH
3. Configure UDP MAC destination register, LOW
4. Configure top level partial channel mask registers (64 slots)
5. Write 0 (STOP) to UDP state register
8 Write 0 (STOP) to DAQ state register
9. Write 1 to DAQ FIFO flags register (bring reset line HIGH)
10. Write 0 to DAQ FIFO flags register (brings reset line LOW)
11 Write 0x00000001 to UDP state register
12. Write 0x00000005 to DAQ state register

To stop partial live streaming:

1. Write 0 (STOP) to DAQ state register
2. Write 0 (STOP) to UDP state register
3. Write 1 to DAQ FIFO flags register (bring reset line HIGH)
4. Write 0 to DAQ FIFO flags register (brings reset line LOW)

# Reading Back Data From Disk

NB: disk index will auto-increment, so daemon could potentially just keep
writing BEGIN_READ state?

1. Write STOP to UDP module state register (redundant?)
2. Configure UDP IPv4 source register
3. Configure UDP IPv4 destination register
4. Configure UDP MAC destination register
5. Configure start board sample index to SATA read register
7. Configure length to SATA read register
7. Write BEGIN_READ to top level state register
   (board sample will be sent)

