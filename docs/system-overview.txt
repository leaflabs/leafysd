# Definitions

A "channel" refers to an voltage sampled electrode line. The Intan Chips sample
up to 32 channels with a single ADC using an analog MUX, so it would be
incorrect to say that there is a one-to-one mapping between channels and ADCs.

An "Intan Chip" is an Intan RHD2000-series combination amplifier and ADC chip
in 32-channel unipolar sampling mode. Not to be confused with other Intan chips
used in related projects which operate only as amplifiers.

A "data node" is the LeafLabs-designed device which agregates data from 32
(or up to 96) seperate Intan Chips, for up to 1024 (or up to 3072) channels.

The term "board sample" refers to the agregation of single samples from each
channel on an FPGA board (1024 and then later 3072 channels), all taken within
the same sampling period.

A "board subsample" is an aggregation of a subset of channel samples from a
single board sample.

To avoid confusion, the word "frame" is not defined or used in this document.

# Data Throughput

In the first revision there are:

    32 chips, each having 35 channels ADC at 16bits
    30k samples/sec

Later revisions will extend to 96 chips per FPGA board. There may also be
additional synchronized digital or analog channels, probably at lower bit
rates.

It should be possible to sample 3 of the 35 channels per chip at a lower rate,
eg 10khz.

A single 1024-channel sampling of just the "primary" channels (no auxiliary
data) would be about 2024 Bytes of data; assuming some framing overhead, this
is a pretty nice starting size for a UDP packet, of which there would need to
be 30k per second. If larger UDP packet sizes result in more efficient use of
the line and larger agregate data bandwidth, then quad- or octo- bundled packets
of multiple samples could be used.

Ethernet MTUs (maximum transmission unit) are often set around 1500 bytes for
longer multi-hop links, but it should be possible to reconfigure any NIC cards
and switches to allow 3000 byte or large packets. The UDP protocol allows up to
65KB or so packets, which would allow 30 full channel samples (at a rate of
1KHz).

All of this is with no compression; lossless compression could allow
significantly faster data read out, at least for off line analysis. A future
"channel timestream" packet format which passed thousands of samples of a
single channel might compress more efficiently than "board sample" packets of
all channels at a single point in time.

A 32bit identifier on samples, with 30khz samples, makes for more than 36 hours
of continuous sampling before a roll over.

# Modes of FPGA Operation

Use cases:

- Setup: configuration, calibration
- Acquire: recording data to disk cache, streaming some data over UDP
- Download: copy data from disk cache

Eventually the "Acquire" mode will probably result in 

Modes:

- Normal
- Live Acquisition

# Appendix: Intan Interface Chip Background

Proposed: SPI commands at 30khz, which allows 35 "slots". Sample the 32 regular
channels at full rate, 3 aux channels at a reduced rate (10khz? 1khz?), leaving 
a few extra channels for register reads and writes while streaming. Always
acquire at SPI level, maybe mux out on FPGA/SATA, or mux out only for online
analysis.

The Intan chips have 64x 8-bit registers to control configuration and optional
features.

Raw write access to the registers might not make sense over the UDP protocol
because the registers are bit packed. A mask could be used in the UDP protocol.
The FPGA should retain a complete internal copy of the register settings for
each chip, so that individual bit flips can be accomplished, and will need to
write out all configuration after a chip reset.

One register controls a "impedance check" DAC; this register might change
quickly, but presumably would only ever be controlled directly by the FPGA.

RHD2000 commands:
    CONVERT(C): perform ADC conversion on a particular signal. 
                C is 6bit; value 63 to scan all channels.
                Returns 16bit value
    CALIBRATE: Initiate ADC self-calibration routine
               Returns nothing
    CLEAR: Clear ADC calibration
           Returns nothing
    WRITE(R,D): Write data D (8bit) to register R (6bit)
                Returns D (8bit)
    READ(R): Read contents of register R (6bit)
             Returns D (8bit)

# References

Intan RHD2000 Series Datasheet
http://www.intantech.com/files/Intan_RHD2000_series_datasheet.pdf

